// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  roleId     Int
  contact    Int        @default(62)
  alamat     String     @default("")
  isVerified Boolean
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  image      String?
  role       Role       @relation(fields: [roleId], references: [id])
  Review     Review[]
  Comment    Comment[]
  Property   Property[]
}

model Role {
  id   Int    @id @default(autoincrement())
  role String
  User User[]
}

model Room {
  id                Int                 @id @default(autoincrement())
  propertyId        Int
  type              String
  price             Int
  description       String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  property          Property            @relation(fields: [propertyId], references: [id])
  Room_Availability Room_Availability[]
  Transaction       Transaction[]
}

model Property {
  id               Int                @id @default(autoincrement())
  name             String
  descripion       String
  categoryId       Int
  tenantId         Int
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  picture          String?
  Room             Room[]
  category         Category           @relation(fields: [categoryId], references: [id])
  user             User               @relation(fields: [tenantId], references: [id])
  Peak_Season_Rate Peak_Season_Rate[]
  Review           Review[]
}

model Category {
  id         Int        @id @default(autoincrement())
  name       String
  descripton String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Property   Property[]
}

model Room_Availability {
  id                          Int      @id @default(autoincrement())
  roomId                      Int
  date                        DateTime
  isAvaible                   Boolean
  price_adjustment_percentage Int
  room                        Room     @relation(fields: [roomId], references: [id])
}

model Peak_Season_Rate {
  id                          Int      @id @default(autoincrement())
  propertyId                  Int
  startDate                   DateTime
  endDate                     DateTime
  price_adjustment_percentage Int
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  property                    Property @relation(fields: [propertyId], references: [id])
}

model Transaction {
  id           Int      @id @default(autoincrement())
  uuid         String   @unique @default(uuid())
  roomId       Int
  checkIn      DateTime
  checkOut     DateTime
  total        Int
  statusId     Int
  paymentProof String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  room         Room     @relation(fields: [roomId], references: [id])
}

model StatusReservation {
  id     Int    @id @default(autoincrement())
  status String
}

model Review {
  id         Int       @id @default(autoincrement())
  userId     Int
  rating     String
  riview     String
  propertyId Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  property   Property  @relation(fields: [propertyId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  Comment    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  riviewId  Int
  tenantId  Int
  reply     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  review    Review   @relation(fields: [riviewId], references: [id])
  user      User     @relation(fields: [tenantId], references: [id])
}
